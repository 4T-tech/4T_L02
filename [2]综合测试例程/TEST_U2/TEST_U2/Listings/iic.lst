C51 COMPILER V9.59.0.0   IIC                                                               09/26/2025 18:17:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\Keil5\Keil5.38\C51\BIN\C51.EXE iic.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(..\TEST_U2) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "iic.h"
   2          
   3          void delay_5us(void)  //@11.0592MHz
   4          {
   5   1        unsigned char data i;
   6   1      
   7   1        _nop_();
   8   1        i = 11;
   9   1        while (--i);
  10   1      }
  11          
  12          
  13          void I2C_init() 
  14          {
  15   1        sda = 1;
  16   1        _nop_();
  17   1        scl = 1;
  18   1        _nop_();
  19   1      }
  20          
  21          /*I2C起始信号*/
  22          void I2C_Start()  
  23          {
  24   1        scl = 1;
  25   1        _nop_();
  26   1        sda = 1;
  27   1        delay_5us();
  28   1        sda = 0;
  29   1        delay_5us();
  30   1      }
  31          
  32          /*I2C终止信号*/
  33          void I2C_Stop()
  34          {
  35   1        sda = 0;
  36   1        _nop_();
  37   1        scl = 1;
  38   1        delay_5us();
  39   1        sda = 1;
  40   1        delay_5us();
  41   1      }
  42          
  43          /*主机发送应答*/
  44          void Master_ACK(bit i)    
  45          {
  46   1        scl = 0; // 拉低时钟总线允许sda数据总线上的数据变化
  47   1        _nop_(); // 让总线稳定
  48   1        if (i)   //如果i = 1 那么拉低数据总线 表示主机应答
  49   1        {
  50   2          sda = 0;
  51   2        }
  52   1        else   
  53   1        {
  54   2          sda = 1;   //发送非应答
C51 COMPILER V9.59.0.0   IIC                                                               09/26/2025 18:17:36 PAGE 2   

  55   2        }
  56   1        _nop_();//让总线稳定
  57   1        scl = 1;//拉高时钟总线 让从机从sda线上读走 主机的应答信号
  58   1        delay_5us();
  59   1        scl = 0;//拉低时钟总线， 占用总线继续通信
  60   1        _nop_();
  61   1        sda = 1;//释放sda数据总线。
  62   1        _nop_();
  63   1      }
  64          
  65          /*检测从机应答*/
  66          bit Test_ACK()
  67          {
  68   1        scl = 1;
  69   1        delay_5us();
  70   1        if (sda)
  71   1        {
  72   2          scl = 0;
  73   2          _nop_();
  74   2          I2C_Stop();
  75   2          return(0);
  76   2        }
  77   1        else
  78   1        {
  79   2          scl = 0;
  80   2          _nop_();
  81   2          return(1);
  82   2        }
  83   1      }
  84          
  85          /*发送一个字节*/
  86          void I2C_send_byte(uchar byte)
  87          {
  88   1        uchar i;
  89   1        for(i = 0 ; i < 8 ; i++)
  90   1        {
  91   2          scl = 0;
  92   2          _nop_();
  93   2          if (byte & 0x80)
  94   2          {       
  95   3            sda = 1;  
  96   3            _nop_();           
  97   3          }       
  98   2          else
  99   2          {
 100   3            sda = 0;
 101   3            _nop_();
 102   3          }
 103   2          scl = 1;
 104   2          _nop_();
 105   2          byte <<= 1; // 0101 0100B 
 106   2        }
 107   1        scl = 0;
 108   1        _nop_();
 109   1        sda = 1;
 110   1        _nop_();
 111   1      }
 112          
 113          
 114          /*I2C 读一字节*/
 115          uchar I2C_read_byte()
 116          {
C51 COMPILER V9.59.0.0   IIC                                                               09/26/2025 18:17:36 PAGE 3   

 117   1        uchar dat,i;
 118   1        scl = 0;
 119   1        _nop_();
 120   1        sda = 1;
 121   1        _nop_();
 122   1        for(i = 0 ; i < 8 ; i++)
 123   1        {
 124   2          scl = 1;
 125   2          _nop_();
 126   2          if (sda)          
 127   2          {
 128   3             dat |= 0x01; //
 129   3          }
 130   2          else
 131   2          {
 132   3            dat &=  0xfe; //1111 1110
 133   3          }
 134   2          _nop_();
 135   2          scl = 0 ;
 136   2          _nop_();
 137   2          if(i < 7)
 138   2          {
 139   3            dat = dat << 1; 
 140   3          }
 141   2        }
 142   1        return(dat);
 143   1      }
 144          
 145          /*I2C发送数据*/
 146          bit I2C_TransmitData(uchar ADDR, DAT)
 147          {
 148   1        I2C_Start();
 149   1        I2C_send_byte(AT24C02_ADDR+0);
 150   1        if (!Test_ACK())
 151   1        {
 152   2          return(0);
 153   2        }
 154   1        I2C_send_byte(ADDR); 
 155   1        if (!Test_ACK())
 156   1        {
 157   2          return(0);
 158   2        }
 159   1        I2C_send_byte(DAT);
 160   1        if (!Test_ACK())
 161   1        {
 162   2          return(0);
 163   2        }
 164   1        I2C_Stop();
 165   1        return(1);  
 166   1      }
 167          
 168          /*I2C接收数据*/
 169          uchar I2C_ReceiveData(uchar ADDR)
 170          {
 171   1        uchar DAT;
 172   1        I2C_Start();
 173   1        I2C_send_byte(AT24C02_ADDR+0);
 174   1        if (!Test_ACK())
 175   1        {
 176   2          return(0);
 177   2        }
 178   1        I2C_send_byte(ADDR);
C51 COMPILER V9.59.0.0   IIC                                                               09/26/2025 18:17:36 PAGE 4   

 179   1        Master_ACK(0);
 180   1        I2C_Start();
 181   1        I2C_send_byte(AT24C02_ADDR+1);
 182   1        if (!Test_ACK())
 183   1        {
 184   2          return(0);
 185   2        }
 186   1        DAT = I2C_read_byte();
 187   1        Master_ACK(0);
 188   1        I2C_Stop();
 189   1        return(DAT);  
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    284    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
